mydata <- read.csv(file.choose())
install.packages("ggplot2")
ggplot(data=mydata, aes(x=carat, y=price)) + geom_point()
ggplot2(data=mydata, aes(x=carat, y=price)) + geom_point()
install.packages("ggplot2")
Sys.which("make")
Sys.which("make")
install.packages("ggplot2")
mydata <- read.csv(file.choose())
ggplot(data=mydata, aes(x=carat, y=price)) + geom_point()
ggplot2(data=mydata, aes(x=carat, y=price)) + geom_point()
install.packages(c("pillar", "tibble", "utf8"))
library(ggplot2)
medical_raw_data <- read.csv("D:/Documents/WGU_MSDA/NUM2/Task_1_Data/medical_raw_data.csv")
View(medical_raw_data)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
med_data_r <- medical_raw_data
med_data_r <- read.csv(file="D:/Documents/WGU_MSDA/NUM2/Task_1_Data/medical_raw_data.csv")
View(med_data_r)
med_data_r$Zip
install.packages("sqldf")
install.packages("rgl")
install.packages("data.table")
install.packages("cluster")
install.packages("ggbiplot")
install.packages("ggfortify")
install.packages("factoextra")
library(dplyr)
library(factoextra)
setwd("D:/Documents/WGU_MSDA/NUM2/Task_1_Data")
med_raw_data <- read.csv(file="medical_raw_data.csv", stringsAsFactors = TRUE)
summary(med_raw_data)
options(max.print=5000)
length(levels(med_raw_data$City))
levels(med_raw_data$City)[1:5000]
levels(med_raw_data$City)[5001:6072]
levels(med_raw_data$State)
levels(med_raw_data$County)
levels(med_raw_data$Timezone)
levels(med_raw_data$Job)
levels(med_raw_data$Education)
med_data_num <- select(med_raw_data, Customer_id, Zip, Lat, Lng, Population,
Children, Age, Income, VitD_levels, Doc_visits,
Full_meals_eaten, VitD_supp, Initial_days, TotalCharge,
Additional_charges)
summary(med_data_num)
for (x in 1:9999) {
med_data_num[x,5] <- na_if(med_data_num[x,5], 0)
}
summary(med_data_num['Population'])
for (j in 2:13) {
i <- 0
for (x in is.na(med_data_num[,j])) {
i <- i + 1
if(x == TRUE) {
med_data_num[i,j] <- median(med_data_num[!is.na(med_data_num[,j]),j])
}
}
}
summary(med_data_num)
standardize <- function(x){
(x-min(x))/(max(x)-min(x))
}
for (x in 2:15) {
med_data_num[,x] <- standardize(med_data_num[,x])
}
summary(med_data_num)
plot(med_data_num$Lng, med_data_num$Lat)
boxplot(med_data_num[,c(2,5:7)])
boxplot(med_data_num[,8:11])
boxplot(med_data_num[,12:15])
med_data_items <- select(med_raw_data, Customer_id, Item1, Item2, Item3, Item4,
Item5, Item6, Item7, Item8)
summary(med_data_items)
standardize_items <- function(x){
(x)/(8)
}
for (x in 2:9) {
med_data_items[,x] <- 9 - med_data_items[,x]
med_data_items[,x] <- standardize_items(med_data_items[,x])
}
summary(med_data_items)
boxplot(med_data_items[,2:9])
med_data_cat <- select(med_raw_data, Customer_id, Overweight, Anxiety,
Complication_risk, Education, Employment, City, State,
County, Area, Timezone, Job, Marital, Gender,
Initial_admin, Services, ReAdmis, Soft_drink, HighBlood,
Stroke, Arthritis, Diabetes, Hyperlipidemia, BackPain,
Allergic_rhinitis, Reflux_esophagitis, Asthma)
summary(med_data_cat)
i <- 0
library(dplyr)
library(factoextra)
setwd("D:/Documents/WGU_MSDA/NUM2/Task_1_Data")
med_raw_data <- read.csv(file="medical_raw_data.csv", stringsAsFactors = TRUE)
summary(med_raw_data)
options(max.print=5000)
length(levels(med_raw_data$City))
levels(med_raw_data$City)[1:5000]
levels(med_raw_data$City)[5001:6072]
levels(med_raw_data$State)
levels(med_raw_data$County)
levels(med_raw_data$Timezone)
levels(med_raw_data$Job)
levels(med_raw_data$Education)
med_data_num <- select(med_raw_data, Customer_id, Zip, Lat, Lng, Population,
Children, Age, Income, VitD_levels, Doc_visits,
Full_meals_eaten, VitD_supp, Initial_days, TotalCharge,
Additional_charges)
summary(med_data_num)
for (x in 1:9999) {
med_data_num[x,5] <- na_if(med_data_num[x,5], 0)
}
summary(med_data_num['Population'])
for (j in 2:13) {
i <- 0
for (x in is.na(med_data_num[,j])) {
i <- i + 1
if(x == TRUE) {
med_data_num[i,j] <- median(med_data_num[!is.na(med_data_num[,j]),j])
}
}
}
summary(med_data_num)
standardize <- function(x){
(x-min(x))/(max(x)-min(x))
}
for (x in 2:15) {
med_data_num[,x] <- standardize(med_data_num[,x])
}
summary(med_data_num)
plot(med_data_num$Lng, med_data_num$Lat)
boxplot(med_data_num[,c(2,5:7)])
boxplot(med_data_num[,8:11])
boxplot(med_data_num[,12:15])
library(dplyr)
library(factoextra)
setwd("D:/Documents/WGU_MSDA/NUM2/Task_1_Data")
med_raw_data <- read.csv(file="medical_raw_data.csv", stringsAsFactors = TRUE)
summary(med_raw_data)
options(max.print=5000)
length(levels(med_raw_data$City))
levels(med_raw_data$City)[1:5000]
levels(med_raw_data$City)[5001:6072]
levels(med_raw_data$State)
levels(med_raw_data$County)
levels(med_raw_data$Timezone)
levels(med_raw_data$Job)
levels(med_raw_data$Education)
med_data_num <- select(med_raw_data, Customer_id, Zip, Lat, Lng, Population,
Children, Age, Income, VitD_levels, Doc_visits,
Full_meals_eaten, VitD_supp, Initial_days, TotalCharge,
Additional_charges)
summary(med_data_num)
for (x in 1:9999) {
med_data_num[x,5] <- na_if(med_data_num[x,5], 0)
}
summary(med_data_num['Population'])
for (j in 2:13) {
i <- 0
for (x in is.na(med_data_num[,j])) {
i <- i + 1
if(x == TRUE) {
med_data_num[i,j] <- median(med_data_num[!is.na(med_data_num[,j]),j])
}
}
}
summary(med_data_num)
standardize <- function(x){
(x-min(x))/(max(x)-min(x))
}
for (x in 2:15) {
med_data_num[,x] <- standardize(med_data_num[,x])
}
summary(med_data_num)
plot(med_data_num$Lng, med_data_num$Lat)
boxplot(med_data_num[,c(2,5:7)])
boxplot(med_data_num[,8:11])
boxplot(med_data_num[,12:15])
#Packages
library(dplyr)
library(factoextra)
#Setting the working Directory
#Replace with your directory where the medical_raw_data.csv file is located
setwd("D:/Documents/WGU_MSDA/NUM2/Task_1_Data")
#Loading the data
med_raw_data <- read.csv(file="medical_raw_data.csv", stringsAsFactors = TRUE)
#Part D.1
summary(med_raw_data)
options(max.print=5000)
length(levels(med_raw_data$City))
levels(med_raw_data$City)[1:5000]
levels(med_raw_data$City)[5001:6072]
levels(med_raw_data$State)
levels(med_raw_data$County)
levels(med_raw_data$Timezone)
levels(med_raw_data$Job)
levels(med_raw_data$Education)
#Part D.2
med_data_num <- select(med_raw_data, Customer_id, Zip, Lat, Lng, Population,
Children, Age, Income, VitD_levels, Doc_visits,
Full_meals_eaten, VitD_supp, Initial_days, TotalCharge,
Additional_charges)
summary(med_data_num)
for (x in 1:9999) {
med_data_num[x,5] <- na_if(med_data_num[x,5], 0)
}
summary(med_data_num['Population'])
summary(med_data_num['Population'])
for (j in 2:13) {
i <- 0
for (x in is.na(med_data_num[,j])) {
i <- i + 1
if(x == TRUE) {
med_data_num[i,j] <- median(med_data_num[!is.na(med_data_num[,j]),j])
}
}
}
summary(med_data_num)
#Packages
library(dplyr)
library(factoextra)
#Setting the working Directory
#Replace with your directory where the medical_raw_data.csv file is located
setwd("D:/Documents/WGU_MSDA/NUM2/Task_1_Data")
#Loading the data
med_raw_data <- read.csv(file="medical_raw_data.csv", stringsAsFactors = TRUE)
#Part D.1
summary(med_raw_data)
options(max.print=5000)
length(levels(med_raw_data$City))
levels(med_raw_data$City)[1:5000]
levels(med_raw_data$City)[5001:6072]
levels(med_raw_data$State)
levels(med_raw_data$County)
levels(med_raw_data$Timezone)
levels(med_raw_data$Job)
levels(med_raw_data$Education)
#Part D.2
med_data_num <- select(med_raw_data, Customer_id, Zip, Lat, Lng, Population,
Children, Age, Income, VitD_levels, Doc_visits,
Full_meals_eaten, VitD_supp, Initial_days, TotalCharge,
Additional_charges)
summary(med_data_num)
for (x in 1:9999) {
med_data_num[x,5] <- na_if(med_data_num[x,5], 0)
}
summary(med_data_num['Population'])
for (j in 2:13) {
i <- 0
for (x in is.na(med_data_num[,j])) {
i <- i + 1
if(x == TRUE) {
med_data_num[i,j] <- median(med_data_num[!is.na(med_data_num[,j]),j])
}
}
}
summary(med_data_num)
standardize <- function(x){
(x-min(x))/(max(x)-min(x))
}
for (x in 2:15) {
med_data_num[,x] <- standardize(med_data_num[,x])
}
summary(med_data_num)
#Part D.1.a
plot(med_data_num$Lng, med_data_num$Lat)
boxplot(med_data_num[,c(2,5:7)])
boxplot(med_data_num[,8:11])
boxplot(med_data_num[,12:15])
#Part D.2 resumes
med_data_items <- select(med_raw_data, Customer_id, Item1, Item2, Item3, Item4,
Item5, Item6, Item7, Item8)
summary(med_data_items)
standardize_items <- function(x){
(x)/(8)
}
for (x in 2:9) {
med_data_items[,x] <- 9 - med_data_items[,x]
med_data_items[,x] <- standardize_items(med_data_items[,x])
}
summary(med_data_items)
boxplot(med_data_items[,2:9])
med_data_cat <- select(med_raw_data, Customer_id, Overweight, Anxiety,
Complication_risk, Education, Employment, City, State,
County, Area, Timezone, Job, Marital, Gender,
Initial_admin, Services, ReAdmis, Soft_drink, HighBlood,
Stroke, Arthritis, Diabetes, Hyperlipidemia, BackPain,
Allergic_rhinitis, Reflux_esophagitis, Asthma)
summary(med_data_cat)
i <- 0
for (x in med_data_cat$County) {
i <- i + 1
if (x == 'AÃ±asco') {
med_data_cat[i,9] <- NA
} else if (x == 'BayamÃ³n') {
med_data_cat[i,9] <- NA
} else if (x == 'DoÃ±a Ana') {
med_data_cat[i,9] <- NA
} else if (x == 'MayagÃ¼ez') {
med_data_cat[i,9] <- NA
} else if (x == 'PeÃ±uelas') {
med_data_cat[i,9] <- NA
} else if (x == 'RincÃ³n') {
med_data_cat[i,9] <- NA
}
}
med_data_cat <- med_data_cat[!is.na(med_data_cat[,9]),]
summary(med_data_cat)
i <- 0
for (x in is.na(med_data_cat$Anxiety)) {
i <- i + 1
if(x == TRUE) {
med_data_cat[i, "Anxiety"] <- 0
}
}
i <- 0
for (x in is.na(med_data_cat$Overweight)) {
i <- i + 1
if(x == TRUE) {
med_data_cat[i, "Overweight"] <- 0
}
}
i <- 0
for (x in is.na(med_data_cat$Soft_drink)) {
i <- i + 1
if(x == TRUE) {
med_data_cat[i, "Soft_drink"] <- "No"
}
}
summary(med_data_cat)
med_data_cat$Complication_risk <- as.numeric(factor(med_data_cat$Complication_risk,
levels=c("Low", "Medium", "High")))
summary(med_data_cat$Complication_risk)
med_data_cat$Education <- as.numeric(factor(med_data_cat$Education,
levels=c('No Schooling Completed',
'Nursery School to 8th Grade',
'9th Grade to 12th Grade, No Diploma',
'GED or Alternative Credential',
'Regular High School Diploma',
'Some College, Less than 1 Year',
'Some College, 1 or More Years, No Degree',
'Associate\'s Degree',
'Professional School Degree',
'Bachelor\'s Degree',
'Master\'s Degree',
'Doctorate Degree')))
summary(med_data_cat$Education)
med_data_cat$Employment <- as.numeric(factor(med_data_cat$Employment,
levels=c('Unemployed',
'Student',
'Retired',
'Part Time',
'Full Time')))
summary(med_data_cat$Employment)
for (x in 7:16) {
med_data_cat[,x] <- as.numeric(factor(med_data_cat[,x], levels=unique(med_data_cat[,x]), exclude=NULL))
}
summary(med_data_cat)
for (x in 17:27) {
med_data_cat[,x] <- as.numeric(factor(med_data_cat[,x], levels=c("No", "Yes")))
}
summary(med_data_cat)
for (x in 2:27) {
med_data_cat[,x] <- standardize(med_data_cat[,x])
}
summary(med_data_cat)
med_data_unique <- select(med_raw_data, CaseOrder, Customer_id, Interaction, UID)
med_data_cleaned1 <- inner_join(med_data_unique, med_data_num, by="Customer_id")
med_data_cleaned2 <- inner_join(med_data_items, med_data_cat, by="Customer_id")
med_data_cleaned <- inner_join(med_data_cleaned1, med_data_cleaned2, by="Customer_id")
summary(med_data_cleaned)
write.csv(med_data_cleaned, "medical_data_cleaned.csv")
#Part E
med_data_cleaned.pca <- prcomp(med_data_cleaned[5:26], center=TRUE, scale=TRUE)
summary(med_data_cleaned.pca)
fviz_eig(med_data_cleaned.pca, choice="eigenvalue", addlabels=TRUE, ncp=35)
med_data_cleaned.pca
